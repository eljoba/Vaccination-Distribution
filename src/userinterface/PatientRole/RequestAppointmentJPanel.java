/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CreateAppointmentWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kvs25
 */
public class RequestAppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private EcoSystem business;
    private Enterprise enterprise;

    RequestAppointmentJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.business = business;
        
        populateNetworkComboBox();
        jPatientLabel.setText(account.toString());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnHospitalListDropDown = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctors = new javax.swing.JTable();
        btnNetworkComboBox = new javax.swing.JComboBox();
        btnNext = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPatientLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnHospitalListDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalListDropDownActionPerformed(evt);
            }
        });
        add(btnHospitalListDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, -1, -1));

        tblDoctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDoctors);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, -1, 197));

        btnNetworkComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNetworkComboBoxActionPerformed(evt);
            }
        });
        add(btnNetworkComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 370, -1, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, -1));

        jLabel1.setText("Please select a Hospital");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        jLabel2.setText("Please select a Network");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        jPatientLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        add(jPatientLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 40, 150, 40));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel3.setText("Request Appointment Area");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 270, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void btnNetworkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNetworkComboBoxActionPerformed
        // TODO add your handling code here:
        
        Network network = (Network) btnNetworkComboBox.getSelectedItem();
        if (network != null) {
            populateEnterpriseComboBox(network);
        } 
    }//GEN-LAST:event_btnNetworkComboBoxActionPerformed

    private void btnHospitalListDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalListDropDownActionPerformed
        // TODO add your handling code here:
        
        enterprise = (Enterprise) btnHospitalListDropDown.getSelectedItem();
        if (enterprise != null) {
            populateTable(enterprise);
        } 
    }//GEN-LAST:event_btnHospitalListDropDownActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDoctors.getSelectedRow();
        if (selectedRow >= 0) {
            CreateAppointmentWorkRequest request = new CreateAppointmentWorkRequest();
            request.setReceiver((UserAccount) tblDoctors.getValueAt(selectedRow, 0));
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("VitalSignFormJPanel", new VitalSignFormJPanel(userProcessContainer, account, request, enterprise));
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Doctor");
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
         Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientWorkAreaJPanel pwajp = (PatientWorkAreaJPanel) component;
        pwajp.populateTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
        
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox btnHospitalListDropDown;
    private javax.swing.JComboBox btnNetworkComboBox;
    private javax.swing.JButton btnNext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jPatientLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDoctors;
    // End of variables declaration//GEN-END:variables

    public void populateEnterpriseComboBox(Network network) {
                      
       btnHospitalListDropDown.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise instanceof HospitalEnterprise) {
                btnHospitalListDropDown.addItem(enterprise);
            }

        }
    }

    public void populateNetworkComboBox() {
        
       btnNetworkComboBox.removeAllItems();
        for (Network network : business.getNetworkList()) {
            btnNetworkComboBox.addItem(network);
        }
    }

    public void populateTable(Enterprise enterprise) {
        DefaultTableModel dtm = (DefaultTableModel) tblDoctors.getModel();
        dtm.setRowCount(0);

        
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof DoctorOrganization) {
                for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[1];
                    row[0] = ua;
                    dtm.addRow(row);

                }

            }
        }

    }

   
}
